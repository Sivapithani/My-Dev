@Istest
public class CRTimeAllocationTrackingControllerTest {
    Static testMethod void CRTimeAllocationTrackingtest(){
        
        String ClientRecordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get(OCM_Constants.CLIENT_RECORD_TYPE_NAME).getRecordTypeId();
        Account testOrganization = UnitTestFactory.buildTestAccount();
        testOrganization.RecordTypeId = ClientRecordTypeId;
        testOrganization.Name = OCM_Constants.OCM_Oaktree_Employee_Org_Name;
        AccountTriggerHandler.hasAlreadyRanAfterInsert = true;
        AccountTriggerHandler.hasAlreadyRanAfterUpdate = true;
        AccountTriggerHandler.hasAlreadyRanBeforeUpdate = true;
        insert testOrganization;
        AccountTriggerHandler.hasAlreadyRanAfterInsert = false;
        AccountTriggerHandler.hasAlreadyRanAfterUpdate = false;
        AccountTriggerHandler.hasAlreadyRanBeforeUpdate = false;
        
        String rtypeContact = [select id from RecordType where Name =:OCM_Constants.RT_OAKTREE_CON limit 1].Id;
        Contact testcontact = UnitTestFactory.buildTestContact();
        testcontact.RecordTypeId = rtypeContact;
        testcontact.AccountId = testOrganization.id;
        testcontact.Status__c = OCM_Constants.OCM_STATUS_ACTIVE; 
        testcontact.Lastname = UserInfo.getLastName();
        testcontact.Firstname = UserInfo.getFirstName();
        ContactTriggerHandler.hasAlreadyRanBeforeInsert = true;
        ContactTriggerHandler.hasAlreadyRanAfterInsert = true;
        ContactTriggerHandler.hasAlreadyRanAfterUpdate = true;
        insert testcontact;
        ContactTriggerHandler.hasAlreadyRanBeforeInsert = false;
        ContactTriggerHandler.hasAlreadyRanAfterInsert = false;
        ContactTriggerHandler.hasAlreadyRanAfterUpdate = false;
        String rtypeClientRequest = [select id from RecordType where SObjectType =:OCM_Constants.OBJ_CASE AND developername =:OCM_Constants.CASE_CLIENT_REQ_RECORD_DEV_NAME limit 1].Id;           
        list<Case> caseList = new list<Case>();
        Case testcase = UnitTestFactory.buildTestCase();
        testcase.RecordTypeId = rtypeClientRequest;
        testcase.Subject ='Test for Allocation time1';
        testcase.Request_Type__c = 'Administrative - Account Metrics';
        testcase.Request_Purpose_Internal__c = true;
        testcase.Overall_Due_Date__c = Date.newInstance(2018,01,08);
        testcase.Status = OCM_Constants.OCM_STATUS_OPEN;
        testcase.Firm_Level_not_strategy_specific__c = true;
        testcase.Request_Received_Date__c = Date.newInstance(2018,01,03);
        testcase.OwnerId=UserInfo.getUserId();
        caseList.add(testcase);
        
        Case testcase2 = UnitTestFactory.buildTestCase();
        testcase2.RecordTypeId = rtypeClientRequest;
        testcase2.Subject ='Test for Allication time2';
        testcase2.Request_Type__c = 'Administrative - Account Metrics';
        testcase2.Request_Purpose_Internal__c = true;
        testcase2.Overall_Due_Date__c = Date.newInstance(2018,01,10);
        testcase2.Status = OCM_Constants.OCM_STATUS_OPEN;
        testcase2.Firm_Level_not_strategy_specific__c = true;
        testcase2.Request_Received_Date__c = Date.newInstance(2018,01,03);
        testcase2.OwnerId=UserInfo.getUserId();
        caseList.add(testcase2);
        insert caseList;
        
        list<ocm_ProcessTask__c> ptList = new list<ocm_ProcessTask__c>();
        ocm_ProcessTask__c testPT = UnitTestFactory.buildTestProcessTask();
        testPT.Case__c = caseList[0].id;
        testPT.Name = OCM_Constants.TEST_ACCOUNT;
        testPT.Status__c = OCM_Constants.OCM_STATUS_OPEN;
        testPT.Assign_To_Name__c = testcontact.ID;
        testPT.Assigned_By__c = UserInfo.getUserId();
        testPT.Assigned_Date__c = Date.newInstance(2018,01,05);
        testPT.Task_Due_Date__c = Date.newInstance(2018,01,14);
        testPT.Task_Time_Intensity__c =2;
        ptList.add(testPT);
        
        ocm_ProcessTask__c testPT2 = UnitTestFactory.buildTestProcessTask();
        testPT2.Case__c = caseList[1].id;
        testPT2.Name = OCM_Constants.TEST_ACCOUNT;
        testPT2.Status__c = OCM_Constants.OCM_STATUS_OPEN;
        testPT2.Assign_To_Name__c = testcontact.ID;
        testPT2.Assigned_By__c = UserInfo.getUserId();
        testPT2.Assigned_Date__c = Date.newInstance(2018,01,05);
        testPT2.Task_Due_Date__c = Date.newInstance(2018,01,13);
        testPT2.Task_Time_Intensity__c =2;
        ptList.add(testPT2);
        
        ocm_ProcessTask__c testPT3 = UnitTestFactory.buildTestProcessTask();
        testPT3.Case__c = caseList[0].id;
        testPT3.Name = OCM_Constants.TEST_ACCOUNT;
        testPT3.Status__c = OCM_Constants.OCM_STATUS_OPEN;
        testPT3.Assign_To_Name__c = testcontact.ID;
        testPT3.Assigned_By__c = UserInfo.getUserId();
        testPT3.Assigned_Date__c = Date.newInstance(2018,01,05);
        testPT3.Task_Due_Date__c = Date.newInstance(2018,01,13);
        testPT3.Task_Time_Intensity__c =2;
        ptList.add(testPT3);
        
        ocm_ProcessTask__c testPT4 = UnitTestFactory.buildTestProcessTask();
        testPT4.Case__c = caseList[1].id;
        testPT4.Name = OCM_Constants.TEST_ACCOUNT;
        testPT4.Status__c = OCM_Constants.OCM_STATUS_OPEN;
        testPT4.Assign_To_Name__c = testcontact.ID;
        testPT4.Assigned_By__c = UserInfo.getUserId();
        testPT4.Assigned_Date__c = Date.newInstance(2018,01,05);
        testPT4.Task_Due_Date__c = Date.newInstance(2018,01,13);
        testPT4.Task_Time_Intensity__c =3;
        ptList.add(testPT4);
        insert ptList;
         ocm_Time_Allocation_Period__c tap = new ocm_Time_Allocation_Period__c();
        tap.Locked__c =false;
        tap.Start_Date__c =Date.newInstance(2018,01,01);
        tap.End_Date__c = Date.newInstance(2018,01,15);
        insert tap;
        ocm_Time_Allocation_Period__c tmperiod =[select id ,Period__c from ocm_Time_Allocation_Period__c where id=:tap.id];
        
        list<ocm_Time_Allocation__c> taList = new list<ocm_Time_Allocation__c>();               
        ocm_Time_Allocation__c testTA = UnitTestFactory.buildTestTimeAllocation();
        testTA.Owner__c = UserInfo.getUserId();
        testTA.Client_Request__c = caseList[0].id;
        testTA.Total_Allocated_Time__c = 2;
        //testTA.Period__c=tmperiod.Period__c;
        taList.add(testTA);
                
        ocm_Time_Allocation__c testTA1 = UnitTestFactory.buildTestTimeAllocation();
        testTA1.Owner__c = UserInfo.getUserId();
        testTA1.Process_Task__c = ptList[0].id;
        testTA1.Total_Allocated_Time__c = 4;
        taList.add(testTA1);
        insert taList;
        
       
        CRTimeAllocationTrackingController crt =new CRTimeAllocationTrackingController();
        crt.Beginning();
        crt.Previous(); 
        crt.Next(); 
        crt.End();
        crt.getDisablePrevious();
        crt.getPageNumber();
        crt.getTotalPages(); 
        crt.sortData(); 
        crt.getDisableNext(); 
        crt.getOwnedByOptions();
        crt.searchData();
        crt.updateData();
    }
}